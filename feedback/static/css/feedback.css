/* CSS for FeedbackXBlock */

/* Overall block. We limit width, and put a very faint
   border around it. */
.feedback_block {
    display: inline-block;
    border-width: 1px;
    border-style: solid;
    border-color: rgba(0,0,0,0.1);
    padding: 10px
}
.feedback_block #consent_to_share{
    margin: 0;
    margin-right: 5px;
}
/* Little thank you message div after people vote */
.feedback_thank_you {
    color: green;
    margin-top: 1rem;
}

/* Label for the freeform text input. We want a little
   space between this and the Likert input.*/
.feedback_block .feedback_header_div {
    margin-top:1em;
}

/* Fieldset for the Likert radio buttons */
.feedback_block .feedback_likert_field {
    padding: 0px;
    margin: 0px;
}

/* The div around everything with a radio button */
.feedback_block .feedback_likert_rating {
    cursor: pointer;
    border-radius:5px;
    display:inline-block;
    text-align:center;
    padding:0px 10px 0px 10px;
}

/* Hide checked icon */
.feedback_icon_active { display:none; }
.feedback_icon_inactive { display:inline-block; }

/* But show it if we are checked... */
.feedback_block input[type="radio"]:checked ~ .feedback_icon_active{
    display: inline-block;
}
/* ... while hiding the unchecked icon */
.feedback_block input[type="radio"]:checked ~ .feedback_icon_inactive{
    display: none;
}

.feedback_icon {
   border-style:solid;
   border-width: 1px;
   border-color: rgba(255,255,255,0);
   padding:1px;
   height:60px;
   width: 60px;
}

.feedback_block input[type="radio"]:focus ~ .feedback_icon {
   border-color: #999999;
}

.feedback_block input[type="radio"]:hover ~ .feedback_icon {
   border-color: #999999;
}

.feedback_block .feedback_likert_label {
    cursor: pointer;
}

.feedback_block .feedback_freeform_input {
    margin-bottom: 1em;
}

.feedback_block .feedback_freeform_area {
    height:inherit;
    width: 100%;
    margin-bottom: 1rem;
}
.feedback_block .feedback_freeform_area 
.feedback_block .feedback_rating_active {
    color: blue;
    font-weight: bold;
    background-color: blanchedalmond;
}

.feedback_block .feedback_radio {
    opacity:0;
    width:1px;
    padding:0px;
    margin:0px;
    position:absolute;
}

.feedback_block .feedback_sr_text{
    opacity:0;
    width:1px;
    height:1px;
    padding:0px;
    margin:0px;
    position:absolute;
    clip:rect(1px,1px,1px,1px);
    left:-10000px;
    overflow:hidden;
}

.feedback_block label{
    display:inline;
}

.feedback_block .feedback_likert_field {
    border-style:none;
}
.feedback_block .feedback_submit_feedback {
    width:100%;
}

.feedback_likert_scale {
    display: flex;
    flex-direction: row;
}
.feedback_block .consent_to_share{
    display: block;
    position: relative;
    padding-left: 25px;
    cursor: pointer;
    font-size: 1rem;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.feedback_block .consent_to_share input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}
.feedback_block .consent_to_share .checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 20px;
  width: 20px;
  background-color: #fff;
    border: 1px solid #b0b0b0;
}

/* On mouse-over, add a grey background color */
.feedback_block .consent_to_share:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.feedback_block .consent_to_share input:checked ~ .checkmark {
  background-color: #ff001b;
}

/* Create the checkmark/indicator (hidden when not checked) */
.feedback_block .consent_to_share .checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.feedback_block .consent_to_share input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.feedback_block .consent_to_share .checkmark:after {
    left: 7px;
    top: 2px;
    width: 5px;
    height: 12px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}